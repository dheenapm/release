name: "Release Status Automation"
on:
  issues:
    types: [opened, edited]

jobs:
  release-status-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get issue details
        id: issue
        run: |
          # Fetch the issue body using the GitHub API
          issue_body=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/dheenapm/release/issues/${{ github.event.issue.number }}" | jq -r '.body')
          
          # Remove any problematic newlines or special characters
          sanitized_body=$(echo "$issue_body" | tr -d '\n' | tr -d '\r')

          # Export the sanitized body to the environment variable
          echo "issue_body=$sanitized_body" >> $GITHUB_ENV

      - name: Check task completion
        id: task-check
        run: |
          # Extract task statuses from the sanitized issue body
          task_statuses=$(echo "${{ env.issue_body }}" | grep -oP '(?<=Status \().*?(?=\))')

          # Check if all tasks are marked as Complete
          if [[ "$task_statuses" =~ "In Progress" ]]; then
            echo "Some tasks are still in progress. Release cannot be marked as complete."
            exit 1
          else
            echo "All tasks are complete. Marking release as complete."
            # Add additional steps if needed (like sending notifications or deploying)
          fi

      - name: Add 'Release Complete' label
        if: success()
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"labels": ["Release Complete"]}' \
            "https://api.github.com/repos/dheenapm/release/issues/${{ github.event.issue.number }}/labels"
